SQL ASSIGNMENT-05

Library System
Use the Schema from previous assignment to perform the given set of
queries.


1) List all the books that are written by Author Loni and has price less then 600.

mysql> select book_name from book where author_name="Loni" and cost<600;
+---------------------+
| book_name           |
+---------------------+
| Oracle-Complete Ref |
| Mastering SQL       |
+---------------------+
2 rows in set (0.00 sec)

2) List the Issue details for the books that are not returned yet.

mysql> select * from issue where return_date is null;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
2 rows in set (0.00 sec)

3) Update all the blank return_date with 31-Dec-06 excluding 7005 and 7006.

mysql> update issue
    -> set return_date=null where return_date ="06-12-31"
    -> and lib_issue_id not in(705,706);
Query OK, 0 rows affected (0.01 sec)
Rows matched: 0  Changed: 0  Warnings: 0

mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | 2006-11-30  |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
3 rows in set (0.00 sec)

4) List all the Issue details that have books issued for more then 30 days.

mysql> select * from issue where datediff(issue_date,return_date>30);
Empty set, 2 warnings (0.01 sec)

5) List all the books that have price in range of 500 to 750 and has category as Database.

mysql> select * from book
    -> where cost between 500 and 750
    -> and category ="Database";
+---------+---------------------+-------------+--------+----------+
| book_no | book_name           | author_name | cost   | category |
+---------+---------------------+-------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni        | 550.00 | Database |
|     104 | PL SQL-Ref          | Scott Urman | 750.00 | Database |
+---------+---------------------+-------------+--------+----------+
2 rows in set (0.00 sec)

6) List all the books that belong to any one of the following categories Science, Database, Fiction, Management.

mysql> select book_no,book_name,category from
    -> book where category in("Science","Database","Fiction","Management");
+---------+---------------------+----------+
| book_no | book_name           | category |
+---------+---------------------+----------+
|     102 | Oracle-Complete Ref | Database |
|     103 | Mastering SQL       | Database |
|     104 | PL SQL-Ref          | Database |
+---------+---------------------+----------+
3 rows in set (0.00 sec)

7) List all the members in the descending order of Penalty due on them.

mysql> select * from member
    -> order by penalty_amount desc;
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name     | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         4 | Manish Upadhya  | Mumbai         | 2021-01-30    | Quarterly       |      5000 |                 5 |         100.00 |
|         1 | Richa Sharma    | Pune           | 2010-12-05    | Lifetime        |     25000 |                 5 |          50.00 |
|         6 | Vishwas Patil   | Satara         | 2025-10-04    | Annual          |      7000 |                 5 |          50.00 |
|         2 | Garima Sen      | Pune           | 2025-10-04    | Annual          |      1000 |                 3 |           NULL |
|         3 | Kshitij Khande  | Nashik         | 2020-12-23    | Annual          |     10000 |                 6 |           NULL |
|         5 | Shrinath Kelkar | Kolhapur       | 2022-10-03    | Lifetime        |      3000 |                 6 |           NULL |
|         7 | Amay Patil      | Nashik         | 2019-02-11    | Annual          |      8000 |                 3 |           NULL |
|         8 | Aarya Pawar     | Thane          | 2023-04-04    | Quarterly       |      5000 |                99 |           NULL |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
8 rows in set (0.01 sec)

8) Modify the price of book with id 103 to Rs 300 and category to RDBMS.

mysql> update book
    -> set cost=300,category="RDBMS"
    -> where book_no=103;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> table book;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     101 | Let us C            | Dennis Ritchie    | 450.00 | System   |
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     103 | Mastering SQL       | Loni              | 300.00 | RDBMS    |
|     104 | PL SQL-Ref          | Scott Urman       | 750.00 | Database |
|     106 | System Programming  | M.N,Donovan       | 575.00 | System   |
|     107 | RDBMS In-Depth      | Dr.Madhavi Vaidya | 707.00 | RDBMS    |
|     108 | RDBMS and Oracle    | S.Ashok Kumar     | 540.00 | RDBMS    |
+---------+---------------------+-------------------+--------+----------+
7 rows in set (0.00 sec)

9) List all the books in ascending order of category and descending order of price.

mysql> select * from book
    -> order by category,cost desc;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     106 | System Programming  | M.N,Donovan       | 575.00 | System   |
|     101 | Let us C            | Dennis Ritchie    | 450.00 | System   |
|     104 | PL SQL-Ref          | Scott Urman       | 750.00 | Database |
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     107 | RDBMS In-Depth      | Dr.Madhavi Vaidya | 707.00 | RDBMS    |
|     108 | RDBMS and Oracle    | S.Ashok Kumar     | 540.00 | RDBMS    |
|     103 | Mastering SQL       | Loni              | 300.00 | RDBMS    |
+---------+---------------------+-------------------+--------+----------+
7 rows in set (0.00 sec)

10) List all the books that contain word SQL in the name of the book.

mysql> select book_no,book_name from book
    -> where book_name like "%SQL%";
+---------+---------------+
| book_no | book_name     |
+---------+---------------+
|     103 | Mastering SQL |
|     104 | PL SQL-Ref    |
+---------+---------------+
2 rows in set (0.00 sec)


11) List the Lib_Issue_Id, Issue_Date, Return_Date and No of days Book was issued.

mysql> select lib_issue_id,issue_date,return_date,
    -> datediff(return_date,issue_date) "No of days Book issued"
    -> from issue;
+--------------+------------+-------------+------------------------+
| lib_issue_id | issue_date | return_date | No of days Book issued |
+--------------+------------+-------------+------------------------+
|         7002 | 2006-12-25 | NULL        |                   NULL |
|         7005 | 2006-11-15 | 2006-11-30  |                     15 |
|         7006 | 2006-02-18 | NULL        |                   NULL |
+--------------+------------+-------------+------------------------+
3 rows in set (0.00 sec)

12) Find the details of the member of the Library in the order of their joining the library.

mysql> select * from member
    -> order by acc_open_date;
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name     | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma    | Pune           | 2010-12-05    | Lifetime        |     25000 |                 5 |          50.00 |
|         7 | Amay Patil      | Nashik         | 2019-02-11    | Annual          |      8000 |                 3 |           NULL |
|         3 | Kshitij Khande  | Nashik         | 2020-12-23    | Annual          |     10000 |                 6 |           NULL |
|         4 | Manish Upadhya  | Mumbai         | 2021-01-30    | Quarterly       |      5000 |                 5 |         100.00 |
|         5 | Shrinath Kelkar | Kolhapur       | 2022-10-03    | Lifetime        |      3000 |                 6 |           NULL |
|         8 | Aarya Pawar     | Thane          | 2023-04-04    | Quarterly       |      5000 |                99 |           NULL |
|         2 | Garima Sen      | Pune           | 2025-10-04    | Annual          |      1000 |                 3 |           NULL |
|         6 | Vishwas Patil   | Satara         | 2025-10-04    | Annual          |      7000 |                 5 |          50.00 |
+-----------+-----------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
8 rows in set (0.00 sec)

13) Display the count of total no of books issued to Member 101.

mysql> select count(book_no) "Issued Books" from issue
    -> where member_id=101;
+--------------+
| Issued Books |
+--------------+
|            0 |
+--------------+
1 row in set (0.00 sec)

14) Display the total penalty due for all the members.

mysql> select sum(penalty_amount) "Total Due Penalty Amount" from member;
+--------------------------+
| Total Due Penalty Amount |
+--------------------------+
|                   200.00 |
+--------------------------+
1 row in set (0.00 sec)

15) Display the total no of members

mysql> select count(*) "Total Members" from member;
+---------------+
| Total Members |
+---------------+
|             8 |
+---------------+
1 row in set (0.00 sec)


16) Display the total no of books issued


mysql> select count(*) "Total Books Issued" from issue;
+--------------------+
| Total Books Issued |
+--------------------+
|                  3 |
+--------------------+
1 row in set (0.01 sec)

17) Display the average membership fees paid by all the members

mysql> select avg(fees_paid) "Average Membership Fees" from member;
+-------------------------+
| Average Membership Fees |
+-------------------------+
|               8000.0000 |
+-------------------------+
1 row in set (0.00 sec)

18) List the various categories and count of books in each category.

mysql> select category,count(*) from book
    -> group by category;
+----------+----------+
| category | count(*) |
+----------+----------+
| System   |        2 |
| Database |        2 |
| RDBMS    |        3 |
+----------+----------+
3 rows in set (0.01 sec)

19) List the book_No and the number of times the book is issued in the descending order of count.


mysql> select book_no,count(*) "No of Times Issued" from issue
    -> group by book_no
    -> order by count(*) desc;
+---------+--------------------+
| book_no | No of Times Issued |
+---------+--------------------+
|     101 |                  1 |
|     102 |                  1 |
|     104 |                  1 |
+---------+--------------------+
3 rows in set (0.00 sec)

20) Find the maximum, minimum, total and average penalty amount in the member table.

mysql> select max(penalty_amount) "Maximum Penalty Amount",
    -> min(penalty_amount) "Minimum Penalty Amount",
    -> sum(penalty_amount) "Total Penalty Amount",
    -> avg(penalty_amount) "Average Total Amount"
    -> from member;
+------------------------+------------------------+----------------------+----------------------+
| Maximum Penalty Amount | Minimum Penalty Amount | Total Penalty Amount | Average Total Amount |
+------------------------+------------------------+----------------------+----------------------+
|                 100.00 |                  50.00 |               200.00 |            66.666667 |
+------------------------+------------------------+----------------------+----------------------+
1 row in set (0.00 sec)

21) Display the member id and the no of books for each member that has issued more then 2 books.

mysql> select member_id,count(*) from issue
    -> group by member_id
    -> having count(*)>2;
Empty set (0.00 sec)


22) Display the member id, book no and no of times the same book is issued by the member in the descending order of count.

mysql> select member_id,book_no,count(*)
    -> from issue
    -> group by member_id,book_no
    -> order by count(*) desc;
+-----------+---------+----------+
| member_id | book_no | count(*) |
+-----------+---------+----------+
|         2 |     102 |        1 |
|         2 |     104 |        1 |
|         3 |     101 |        1 |
+-----------+---------+----------+
3 rows in set (0.00 sec)

23) Display the month and no of books issued each month in the descending order of count.

mysql> select month(issue_date),count(*)
    -> from issue
    -> group by month(issue_date)
    -> order by count(*) desc;
+-------------------+----------+
| month(issue_date) | count(*) |
+-------------------+----------+
|                12 |        1 |
|                11 |        1 |
|                 2 |        1 |
+-------------------+----------+
3 rows in set (0.00 sec)

24) List the book_no of all the books that are not issued to any member so far.

mysql> select book_no from book
    -> where book_no not in(select book_no from issue);
+---------+
| book_no |
+---------+
|     103 |
|     106 |
|     107 |
|     108 |
+---------+
4 rows in set (0.01 sec)

25) List all the member id that exist in member table and has also at least one book issued by them.

mysql> select member_id from member
    -> where member_id in(select member_id from issue);
+-----------+
| member_id |
+-----------+
|         2 |
|         3 |
+-----------+
2 rows in set (0.01 sec)

26) List the member ID with highest and lowest no of books issued.

mysql> select member_id,count(*) "Books Issued"
    -> from issue
    -> group by member_id
    -> order by count(*) desc;
+-----------+--------------+
| member_id | Books Issued |
+-----------+--------------+
|         2 |            2 |
|         3 |            1 |
+-----------+--------------+
2 rows in set (0.00 sec)

27) List all the Issue_details for books issued in December and July without using any arithmetic, Logical or comparison operator.

mysql> select * from issue
    -> where month(issue_date)=12 or month(issue_date)=7;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
+--------------+---------+-----------+------------+-------------+
1 row in set (0.00 sec)

28) List the Book_No, Book_Name and Issue_date for all the books
that are issued in month of December and belong to category Database.

mysql> select b.book_no,book_name,issue_date
    -> from book b inner join issue i
    -> on b.book_no=i.book_no
    -> where month(issue_date)=12 and category="Database";
+---------+---------------------+------------+
| book_no | book_name           | issue_date |
+---------+---------------------+------------+
|     102 | Oracle-Complete Ref | 2006-12-25 |
+---------+---------------------+------------+
1 row in set (0.00 sec)

29) List the Member Id, Member Name and max books allowed in the descending order of the max books allowed.

mysql> select member_id,member_name,max_books_allowed
    -> from member
    -> order by max_books_allowed desc;
+-----------+-----------------+-------------------+
| member_id | member_name     | max_books_allowed |
+-----------+-----------------+-------------------+
|         8 | Aarya Pawar     |                99 |
|         3 | Kshitij Khande  |                 6 |
|         5 | Shrinath Kelkar |                 6 |
|         1 | Richa Sharma    |                 5 |
|         4 | Manish Upadhya  |                 5 |
|         6 | Vishwas Patil   |                 5 |
|         2 | Garima Sen      |                 3 |
|         7 | Amay Patil      |                 3 |
+-----------+-----------------+-------------------+
8 rows in set (0.00 sec)

30) List the Book No, Book Name, Issue_date and Return_Date for all the books issued by Richa Sharma.

mysql> select b.book_no, book_name,issue_date,return_date
    -> from book b inner join issue i
    -> on b.book_no =i.book_no
    -> inner join member m on m.member_id=i.member_id
    -> where member_name="Richa Sharma";
Empty set (0.00 sec)

mysql> select b.book_no, book_name,issue_date,return_date
    -> from book b inner join issue i
    -> on b.book_no =i.book_no
    -> where member_id=(select member_id from member where member_name="Richa Sharma");
Empty set (0.00 sec)

31) List the details of all the members that have issued books in Database category.

mysql> select m.member_id,member_name,book_name,category
    -> from member m inner join issue i
    -> on m.member_id=i.member_id
    -> inner join book b on b.book_no = i.book_no
    -> where issue_date is not null and category="Database";
+-----------+-------------+---------------------+----------+
| member_id | member_name | book_name           | category |
+-----------+-------------+---------------------+----------+
|         2 | Garima Sen  | Oracle-Complete Ref | Database |
|         2 | Garima Sen  | PL SQL-Ref          | Database |
+-----------+-------------+---------------------+----------+

32) List all the books that have highest price in their own category.

mysql> select max(cost),category from book
    -> group by category;
+-----------+----------+
| max(cost) | category |
+-----------+----------+
|    575.00 | System   |
|    750.00 | Database |
|    707.00 | RDBMS    |
+-----------+----------+
3 rows in set (0.00 sec)

33) List all the Issue_Details where Issue_date is not within the Acc_open_date and Return_date for that member.

mysql> select i.lib_issue_id,i.book_no,i.member_id,issue_date,return_date from
    -> issue i inner join member m
    -> on i.member_id=m.member_id
    -> inner join book b on b.book_no=i.book_no
    -> where issue_date not between acc_open_date and return_date;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | 2006-11-30  |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
3 rows in set (0.00 sec)

34) List all the members that have not issued a single book so far.

mysql> select m.member_id,m.member_name from
    -> member m left outer join issue i
    -> on m.member_id=i.member_id
    -> where i.member_id is null;
+-----------+-----------------+
| member_id | member_name     |
+-----------+-----------------+
|         1 | Richa Sharma    |
|         4 | Manish Upadhya  |
|         5 | Shrinath Kelkar |
|         6 | Vishwas Patil   |
|         7 | Amay Patil      |
|         8 | Aarya Pawar     |
+-----------+-----------------+
6 rows in set (0.00 sec)

35) List all the members that have issued the same book as issued by Garima.

mysql> select member_name from
    -> member m join issue i
    -> on m.member_id=i.member_id
    -> where i.book_no in
    -> (select book_no from issue where member_id=
    -> (select member_id from member where member_name="Garima Sen")
    -> ) and m.member_name!="Garima Sen";
Empty set (0.04 sec)


36) List the Book_Name, Price of all the books that are not returned for more then 30 days.

mysql> select b.book_name,b.cost from
    -> book b inner join issue i
    -> on b.book_no=i.book_no
    -> where datediff(curdate(),issue_date)>30;
+---------------------+--------+
| book_name           | cost   |
+---------------------+--------+
| Oracle-Complete Ref | 550.00 |
| PL SQL-Ref          | 750.00 |
| Let us C            | 450.00 |
+---------------------+--------+
3 rows in set (0.01 sec)

37) List all the authors and book_name that has more then 1 book written by them.

mysql> select author_name,book_name
    -> from book where author_name in
    -> (select author_name from book
    -> group by author_name
    -> having count(book_name)>1);
+-------------+---------------------+
| author_name | book_name           |
+-------------+---------------------+
| Loni        | Oracle-Complete Ref |
| Loni        | Mastering SQL       |
+-------------+---------------------+
2 rows in set (0.00 sec)

38) List the Member ID, Member Name of the people that have issued the highest and the lowest no of books.

mysql> select m.member_id, m.member_name, count(*) as total_issues
    -> from member m
    -> join issue i on m.member_id = i.member_id
    -> group by m.member_id, m.member_name
    -> having count(*) = (
    -> select max(issue_count) from (
    -> select count(*) as issue_count from issue
    -> group by member_id) as max_issues)
    -> or count(*) = (
    -> select min(issue_count)
    ->from (
    ->select count(*) as issue_count from issue
    ->group by member_id
    -> ) as min_issues );
+-----------+----------------+--------------+
| member_id | member_name    | total_issues |
+-----------+----------------+--------------+
|         2 | Garima Sen     |            2 |
|         3 | Kshitij Khande |            1 |
+-----------+----------------+--------------+
2 rows in set (0.01 sec)


39) List the details of highest 3 priced books.

mysql> select book_name,cost from book
    -> order by cost desc limit 3;
+--------------------+--------+
| book_name          | cost   |
+--------------------+--------+
| PL SQL-Ref         | 750.00 |
| RDBMS In-Depth     | 707.00 |
| System Programming | 575.00 |
+--------------------+--------+
3 rows in set (0.00 sec)

40) List the total cost of all the books that are currently issued but not returned.


mysql> select sum(cost) "Total Cost of Issued Books"
    -> from book b inner join issue i
    -> on b.book_no=i.book_no
    -> where return_date is null;
+----------------------------+
| Total Cost of Issued Books |
+----------------------------+
|                    1000.00 |
+----------------------------+
1 row in set (0.00 sec)

41) List the details of the book that has been issued maximum no of times.

mysql> select b.* ,count(*) "Times Issued" from
    -> book b join issue i
    -> on b.book_no =i.book_no
    -> group by b.book_no
    -> order by "Times Issued" desc
    -> limit 1;
+---------+-----------+----------------+--------+----------+--------------+
| book_no | book_name | author_name    | cost   | category | Times Issued |
+---------+-----------+----------------+--------+----------+--------------+
|     101 | Let us C  | Dennis Ritchie | 450.00 | System   |            1 |
+---------+-----------+----------------+--------+----------+--------------+
1 row in set (0.05 sec)

42) List how many books are issued to lifetime members.


mysql> select count(*) from member m
    -> inner join issue i
    -> on m.member_id=i.member_id
    -> where membership_type="lifetime";
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (0.00 sec)

43) List all member types and how many members are there in each type.

mysql> select membership_type,count(*) "Members" from
    -> member group by membership_type;
+-----------------+---------+
| membership_type | Members |
+-----------------+---------+
| Lifetime        |       2 |
| Annual          |       4 |
| Quarterly       |       2 |
+-----------------+---------+
3 rows in set (0.00 sec)

44) List first 5 members who had joined library.

mysql> select member_name,acc_open_date from member
    -> order by acc_open_date limit 5 ;
+-----------------+---------------+
| member_name     | acc_open_date |
+-----------------+---------------+
| Richa Sharma    | 2010-12-05    |
| Amay Patil      | 2019-02-11    |
| Kshitij Khande  | 2020-12-23    |
| Manish Upadhya  | 2021-01-30    |
| Shrinath Kelkar | 2022-10-03    |
+-----------------+---------------+
5 rows in set (0.00 sec)

45) List the members with their member type, who have issued books during the period 1st December to 31st December.

mysql> select m. member_id,member_name,membership_type
    -> from member
    -> m inner join issue i
    -> on m.member_id =i.member_id
    -> where month(issue_date)=12;
+-----------+-------------+-----------------+
| member_id | member_name | membership_type |
+-----------+-------------+-----------------+
|         2 | Garima Sen  | Annual          |
+-----------+-------------+-----------------+
1 row in set (0.00 sec)

46) List all the members who have not returned books yet.

mysql> select m.member_id,member_name,issue_date
    -> from member m inner join issue i
    -> on m.member_id=i.member_id
    -> where return_date is null;
+-----------+----------------+------------+
| member_id | member_name    | issue_date |
+-----------+----------------+------------+
|         2 | Garima Sen     | 2006-12-25 |
|         3 | Kshitij Khande | 2006-02-18 |
+-----------+----------------+------------+
2 rows in set (0.04 sec)

47) List all the members who joined library on the same date Garima joined.

mysql> select m.member_id,m.member_name,m.acc_open_date from member
    -> m join member i
    -> on m.member_id=i.member_id
    -> where m.acc_open_date=(select acc_open_date from member where member_name="Garima Sen") and m.member_name!="Garima Sen";
+-----------+---------------+---------------+
| member_id | member_name   | acc_open_date |
+-----------+---------------+---------------+
|         6 | Vishwas Patil | 2025-10-04    |
+-----------+---------------+---------------+
1 row in set (0.00 sec)

or

mysql> select member_id,member_name,acc_open_date from
    -> member where acc_open_date=(select acc_open_date from member where member_name="Garima Sen") and member_name!="Garima Sen";
+-----------+---------------+---------------+
| member_id | member_name   | acc_open_date |
+-----------+---------------+---------------+
|         6 | Vishwas Patil | 2025-10-04    |
+-----------+---------------+---------------+
1 row in set (0.00 sec)

48) List all the members who has issued books from author “Loni” in the month of December

mysql> select m.member_id,member_name from
    -> member m join issue i
    -> on m.member_id=i.member_id
    -> join book b
    -> on b.book_no=i.book_no
    -> where month(issue_date)=12 and author_name="Loni";
+-----------+-------------+
| member_id | member_name |
+-----------+-------------+
|         2 | Garima Sen  |
+-----------+-------------+
1 row in set (0.02 sec)

49) List names of the authors whose books are least issued by lifetime members.

mysql> select author_name,book_name ,count(*) "Times Issued" from
    -> book b join issue i
    -> on b.book_no =i.book_no
    -> join member m
    -> on m.member_id=i.member_id
    -> where membership_type="Lifetime"
    -> group by author_name,b.book_name
    -> order by "Times Issued";
Empty set (0.02 sec)

50) List the names of members who has issued the books whose cost is more than 300 rupees and whose author is “Scott Urman”

mysql> select member_name from
    -> member m join issue i
    -> on m.member_id=i.member_id
    -> join book b
    -> on b.book_no=i.book_no
    -> where issue_date is not null
    -> and cost>300 and author_name="Scott Urman";
+-------------+
| member_name |
+-------------+
| Garima Sen  |
+-------------+
1 row in set (0.07 sec)

51) List all lifetime members who joined library during 1st January 2006 to 31st December 2006 but issued only one book.

mysql> select m.member_id,m.member_name,acc_open_date
    -> from member m join issue i
    -> on m.member_id =i.member_id
    -> where membership_type="lifetime" and year(acc_open_date)=2006
    -> group by m.member_id,m.member_name
    -> having count(i.book_no)=1;
Empty set (0.00 sec)


52) Modify the Penalty_Amount for Garima Sen to Rs 100.

mysql> update member
    -> set penalty_amount=100 where member_name="Garima Sen";
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0